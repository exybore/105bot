require_relative 'command'

module HundredFive
  module Commands
    class Session < Command
      DESC = 'DÃ©marrer une session de participation sur Discord'
      CATEGORY = 'notes'

      def self.exec(context, _)
        context.message.delete
        waiter = Classes::Waiter.new(context, ":microphone2: Session en cours par #{context.user.nick}", "RÃ©agissez Ã  ce message avec l'Ã©moticone :raising_hand: pour demander la parole. Le gÃ©rant de la session peut l'arrÃªter en rÃ©agissant avec l'Ã©moticone :stop_sign:.")
        waiter.msg.react('ðŸ™‹')
        waiter.msg.react('ðŸ”Š')
        waiter.msg.react('ðŸ›‘')
        waiter.msg.pin()

        tts = false
        loop do
          event = context.bot.add_await!(Discordrb::Events::ReactionAddEvent)
          next unless event.channel.id == context.channel.id
          is_host = event.user.id == context.user.id
          case event.emoji.name
          when 'ðŸ™‹'
            context.send("#{context.user.mention} Participation demandÃ©e par #{event.user.mention}", tts)
          when 'ðŸ”Š'
            if is_host
              tts = !tts
              emoji = tts ? ':loud_sound:' : ':mute:'
              state = tts ? 'activÃ©' : 'dÃ©sactivÃ©'
              context.send("#{emoji} #{context.user.mention} Son #{state} pour les demandes de participation.")
            else
              event.user.pm.send_message(":x: **Vous ne pouvez pas modifier le son de la session, car vous n'en Ãªtes pas le propriÃ©taire.**")
            end
          when 'ðŸ›‘'
            if is_host
              waiter.msg.unpin()
              waiter.finish(":door: La session avec #{context.user.nick} est dÃ©sormais terminÃ©e.")
              break
            else
              event.user.pm.send_message(":x: **Vous ne pouvez pas fermer la session de #{context.user.nick}, car vous n'en Ãªtes pas le propriÃ©taire.**")
            end
          else
            event.user.pm.send_message(":question: RÃ©action inconnue. Merci de rÃ©agir Ã  l'aide de celles dÃ©jÃ  disponibles.")
          end
          waiter.msg.delete_reaction(event.user, event.emoji.name)
        end
      end
    end
  end
end
